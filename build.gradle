/*
 * Copyright (c) 2016 Rocana.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.org.nosphere.apache:creadur-rat-gradle:0.2.2"
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.nosphere.apache.rat'
apply plugin: com.rocana.gradle.AvroPlugin

project.group = 'org.osso-project'
project.version = '1.0.0-SNAPSHOT'
project.sourceCompatibility = '1.7'
project.targetCompatibility = '1.7'

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'org.apache.avro', name: 'avro', version: '1.7.6'

  testCompile group: 'junit', name: 'junit', version: '4.11'
}

avro {

  main {
    createSetters = true
    fieldVisibility = "PUBLIC_DEPRECATED"
    stringType = "String"
  }

}

rat {
  inputDir = project.projectDir
  xmlOutput = false
  htmlOutput = true
  excludes = [
    // Generated gradle wrapper files
    'gradlew',
    'gradlew.bat',
    'gradle/**',
    // Gradle cache and build diectories
    '**/.gradle/**',
    '**/build/**',
    // Maven build directories
    '**/target/**',
    // IDE files
    '.idea/**',
    // Avro schema files are JSON and don't support comments.
    'src/main/avro/**',
    // Documentation and notices
    'README.md',
  ]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = "javadoc"
  destinationDir = file("$buildDir/libs/")

  from javadoc.destinationDir
}

assemble.dependsOn(javadocJar)

artifacts {
  archives javadocJar
}

uploadArchives {

  repositories {

    mavenDeployer {

      Closure auth = {
        if (project.hasProperty('username') && project.hasProperty('password')) {
          authentication(userName: project.property('username'), password: project.property('password'))
        }
      }

      if ((project.version as String).endsWith('-SNAPSHOT')) {
        repository(url: "http://repository.rocana.com/content/repositories/osso-snapshots", auth)
      } else {
        repository(url: "http://repository.rocana.com/content/repositories/osso", auth)
      }

      pom {
        project {
          artifactId 'osso'
          url 'http://www.osso-project.org/'
          licenses {
            license {
              name 'The Apache License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
          issueManagement {
            system 'Github'
            url 'https://github.com/osso-project/osso/issues'
          }
          scm {
            connection 'scm:git:git@github.com:osso-project/osso.git'
            developerConnection 'scm:git:git@github.com:osso-project/osso.git'
            url 'https://github.com/osso-project/osso'
            tag 'master'
          }
        }
      }
    }
  }

}
